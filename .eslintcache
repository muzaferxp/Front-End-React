[{"C:\\Users\\perso\\dev\\src\\index.js":"1","C:\\Users\\perso\\dev\\src\\App.js":"2","C:\\Users\\perso\\dev\\src\\reportWebVitals.js":"3","C:\\Users\\perso\\dev\\src\\components\\Header.js":"4","C:\\Users\\perso\\dev\\src\\components\\card.js":"5","C:\\Users\\perso\\dev\\src\\components\\login.js":"6","C:\\Users\\perso\\dev\\src\\components\\main.js":"7","C:\\Users\\perso\\dev\\src\\components\\pills.js":"8","C:\\Users\\perso\\dev\\src\\components\\radar.js":"9","C:\\Users\\perso\\dev\\src\\components\\table.js":"10","C:\\Users\\perso\\dev\\src\\components\\modal.js":"11","C:\\Users\\perso\\dev\\src\\components\\blog.js":"12","C:\\Users\\perso\\dev\\src\\components\\post.js":"13","C:\\Users\\perso\\dev\\src\\components\\append1.js":"14","C:\\Users\\perso\\dev\\src\\components\\loginwithgoogle.js":"15","C:\\Users\\perso\\dev\\src\\registerServiceWorker.js":"16","C:\\Users\\perso\\dev\\src\\components\\Profiles\\Profiles.js":"17","C:\\Users\\perso\\dev\\src\\components\\Profiles\\Profile.js":"18","C:\\Users\\perso\\dev\\src\\components\\LoadingSkeletons.js":"19","C:\\Users\\perso\\dev\\src\\components\\search.js":"20"},{"size":503,"mtime":1608407323458,"results":"21","hashOfConfig":"22"},{"size":6506,"mtime":1608413426466,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":1792,"mtime":1607834300469,"results":"25","hashOfConfig":"22"},{"size":291,"mtime":1607717626831,"results":"26","hashOfConfig":"22"},{"size":1814,"mtime":1608413232090,"results":"27","hashOfConfig":"22"},{"size":1370,"mtime":1608387979432,"results":"28","hashOfConfig":"22"},{"size":4113,"mtime":1607884026593,"results":"29","hashOfConfig":"22"},{"size":1012,"mtime":1608387979448,"results":"30","hashOfConfig":"22"},{"size":12105,"mtime":1608387979448,"results":"31","hashOfConfig":"22"},{"size":871,"mtime":1608387979440,"results":"32","hashOfConfig":"22"},{"size":1129,"mtime":1607927791699,"results":"33","hashOfConfig":"22"},{"size":1305,"mtime":1607926441636,"results":"34","hashOfConfig":"22"},{"size":1572,"mtime":1608394056573,"results":"35","hashOfConfig":"22"},{"size":1391,"mtime":1608408948739,"results":"36","hashOfConfig":"22"},{"size":4503,"mtime":1608407462824,"results":"37","hashOfConfig":"22"},{"size":1539,"mtime":1582553509000,"results":"38","hashOfConfig":"22"},{"size":1644,"mtime":1582553509000,"results":"39","hashOfConfig":"22"},{"size":781,"mtime":1582553509000,"results":"40","hashOfConfig":"22"},{"size":2454,"mtime":1608415023472,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"749b26",{"filePath":"46","messages":"47","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"45"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"45"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\perso\\dev\\src\\index.js",["89"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport '@fortawesome/fontawesome-free/css/all.min.css'; import\r\n'bootstrap-css-only/css/bootstrap.min.css'; import\r\n'mdbreact/dist/css/mdb.css';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();",["90","91"],"C:\\Users\\perso\\dev\\src\\App.js",["92","93","94","95","96","97","98"],"import { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBCard, MDBCardBody,MDBListGroup, MDBListGroupItem, MDBIcon, MDBCardHeader } from 'mdbreact';\r\nimport { BrowserRouter as Router, Switch , Link,   Route} from \"react-router-dom\"\r\nimport React, {  useState, useEffect, Component } from 'react';\r\nimport axios from \"axios\"\r\nimport FormPage from \"./components/login\"\r\nimport Searchuser from \"./components/search\"\r\nimport MainPage from \"./components/main\"\r\nimport DatatablePage from \"./components/table\"\r\nimport ChartsPage from  \"./components/radar\"\r\nimport ModalPage from  \"./components/modal\"\r\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition'\r\nimport Speech from 'react-speech';\r\nimport Form1 from \"./components/append1\"\r\nimport logingoogle from \"./components/loginwithgoogle\"\r\nimport Products from './components/Profiles/Profiles';\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nfunction   App() {\r\n  \r\n\r\n      axios\r\n    .post(\"/data\", {})\r\n    .then(response => {\r\n        // manipulate the response here\r\n       console.log(response)\r\n    })\r\n    .catch(function(error) {\r\n        // manipulate the error response here\r\n    });\r\n\r\n\r\n\r\n    const [data, setdata] = useState(\"\");\r\n\r\n      useEffect(() => {\r\n        fetch('/data').then(res => res.json()).then(data => {\r\n          setdata(data.data);\r\n        });\r\n      }, []);\r\n\r\n\r\n      \r\n      \r\n  const { transcript, resetTranscript } = useSpeechRecognition()\r\n\r\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\r\n    return null\r\n  }\r\n\r\n   \r\n    return (\r\n      <MDBContainer>\r\n         <Router>\r\n          <MDBRow>\r\n            <MDBCol md={4} sm={12} className='mt-4 border rounded mx-auto'>\r\n              <div class='text-center'>\r\n                    <MDBBtn className=\"rounded btn-sm\" onClick={() => alert(\"This feature in under development\")}>\r\n                            Login\r\n                    </MDBBtn>\r\n              </div>\r\n            <MDBContainer>\r\n          <MDBListGroup >\r\n           \r\n            <MDBListGroupItem>\r\n              <Link to=\"/Home\">\r\n               Home\r\n              </Link>\r\n            </MDBListGroupItem>\r\n            <MDBListGroupItem> \r\n              <Link to=\"/login\">\r\n                Contact us\r\n              </Link>\r\n            </MDBListGroupItem>\r\n            <MDBListGroupItem>\r\n                  <Link to=\"/data\">\r\n                    Data\r\n                  </Link>\r\n            </MDBListGroupItem>\r\n            <MDBListGroupItem>\r\n              <Link to=\"/chart\">\r\n                  chart\r\n              </Link>\r\n            </MDBListGroupItem>\r\n            <MDBListGroupItem>\r\n                <Link to=\"/modal\">\r\n                    modal\r\n                </Link>\r\n              </MDBListGroupItem>\r\n\r\n              <MDBListGroupItem>\r\n                <Link to=\"/users\">\r\n                    users\r\n                </Link>\r\n              </MDBListGroupItem>\r\n\r\n              <MDBListGroupItem>\r\n                <Link to=\"/events\">\r\n                    events\r\n                </Link>\r\n              </MDBListGroupItem>\r\n\r\n              <MDBListGroupItem>\r\n                <Link to=\"/search\">\r\n                    search\r\n                </Link>\r\n              </MDBListGroupItem>\r\n         \r\n          </MDBListGroup>\r\n        </MDBContainer>\r\n        </MDBCol>\r\n        <MDBCol md={8} sm={10} style={{height:'90vh', overflow:'auto'}} className='mt-4 bg-light rounded p-4 mx-auto '>\r\n      \r\n      \r\n\r\n            \r\n                <Switch>\r\n                  <Route path='/login' component={FormPage} ></Route>\r\n                  <Route path='/Home'>\r\n                  <div className=\"card p-2 d-flex f rounded my-2\">\r\n                  <MDBRow>\r\n                    <MDBCol md={1} sm={3} className=''>\r\n                          <MDBIcon className=\" text-primary\" onClick={SpeechRecognition.startListening}  icon=\"microphone-alt\" />\r\n                    </MDBCol>\r\n                    <MDBCol md={1} sm={3} className=''>\r\n                    <MDBIcon className=\" text-primary\" onClick={SpeechRecognition.stopListening} icon=\"stop\" />\r\n                    </MDBCol>\r\n                    <MDBCol md={1} sm={3} className=''>\r\n                    <MDBIcon className=\" text-primary\"  onClick={resetTranscript} icon=\"undo\" />\r\n                    </MDBCol>\r\n                    <MDBCol md={1} sm={3} className=''>\r\n                      <MDBIcon  className=\" text-primary\"  md={3} sm={3}  icon=\"save\" />\r\n                    </MDBCol>\r\n                    <MDBCol md={2} sm={3} className=''> <Speech text={transcript}/ >Listen</MDBCol>\r\n                   \r\n                    \r\n\r\n                   \r\n                  </MDBRow>\r\n\r\n                     \r\n                     \r\n\r\n                  </div>\r\n\r\n                 \r\n\r\n                  <textarea class=\"my-2 form-control\" value={transcript}></textarea>\r\n                 \r\n              \r\n              <ul classNaame='mylist'>\r\n\r\n              </ul>\r\n                  {data.split(\",\").map((item,index)=>{\r\n            return <div className='card px-4 my-2 '><p><Speech text={item}/ >{item}</p></div>\r\n        })}\r\n\r\n       \r\n                  </Route>\r\n                  <Route path='/data' component={DatatablePage}></Route>\r\n                  <Route path='/chart' component={ChartsPage}></Route>\r\n                  <Route path='/modal'  component={logingoogle}></Route>\r\n                  <Route path='/search'  component={Searchuser}></Route>\r\n                  <Route path='/users' >    \r\n                        <div class='card bg-white p-2  my-4 rounded shadow'><Products /></div>\r\n\r\n                  </Route>\r\n                  <Route path='/events' >\r\n\r\n                      <div class='card bg-white p-2  my-4 rounded shadow'>\r\n\r\n                            \r\n                      <FullCalendar\r\n                      plugins={[ dayGridPlugin ]}\r\n                      initialView=\"dayGridMonth\" \r\n                      weekends={false}\r\n                      events={[\r\n                        { title: 'event 1', date: '2020-12-01' },\r\n                        { title: 'event 2', date: '2020-12-02' }\r\n                      ]}\r\n                      />\r\n                      </div>\r\n\r\n                  </Route>\r\n                  \r\n                  \r\n                </Switch>\r\n\r\n        \r\n              \r\n        </MDBCol>\r\n      </MDBRow>\r\n      </Router>\r\n    </MDBContainer>\r\n\r\n    );\r\n  }\r\n\r\n\r\nexport default App;","C:\\Users\\perso\\dev\\src\\reportWebVitals.js",[],"C:\\Users\\perso\\dev\\src\\components\\Header.js",["99"],"import React, { Component } from \"react\";\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBDropdown,\r\nMDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBIcon } from \"mdbreact\";\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport FormPage from \"../components/login\"\r\n\r\nclass NavbarPage extends Component {\r\nstate = {\r\n  isOpen: false\r\n};\r\n\r\ntoggleCollapse = () => {\r\n  this.setState({ isOpen: !this.state.isOpen });\r\n}\r\n\r\nrender() {\r\n  return (\r\n    <Router>\r\n      <MDBNavbar color=\"shadow-sm px-4 text-primary\" dark expand=\"md\">\r\n        <MDBNavbarBrand>\r\n            <MDBNavLink to=\"#!\" class='bg-info text-white h5 py-1 px-4 rounded '>Logo</MDBNavLink>  \r\n        </MDBNavbarBrand>\r\n        <MDBNavbarToggler onClick={this.toggleCollapse} />\r\n        <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\r\n          \r\n          <MDBNavbarNav right>\r\n            <MDBNavItem>\r\n              <MDBNavLink className=\"waves-effect waves-light\" to=\"#!\">\r\n                    <MDBIcon icon=\"bell\" className='text-warning' style={{fontSize : '20px' }} />\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBDropdown>\r\n                <MDBDropdownToggle nav caret>\r\n                  <MDBIcon icon=\"user\"  className='text-default'/>\r\n                </MDBDropdownToggle>\r\n                <MDBDropdownMenu className=\"dropdown-default text-default\">\r\n                  <MDBDropdownItem href=\"#!\">Logout</MDBDropdownItem>\r\n                </MDBDropdownMenu>\r\n              </MDBDropdown>\r\n            </MDBNavItem>\r\n          </MDBNavbarNav>\r\n        </MDBCollapse>\r\n      </MDBNavbar>\r\n       \r\n    </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavbarPage;",["100","101"],"C:\\Users\\perso\\dev\\src\\components\\card.js",["102"],"C:\\Users\\perso\\dev\\src\\components\\login.js",[],"C:\\Users\\perso\\dev\\src\\components\\main.js",["103","104","105","106"],"import React from \"react\";\r\nimport FormPage from \"../components/login\"\r\nimport { BrowserRouter as Router, Switch ,  Route} from \"react-router-dom\"\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBCard, MDBCardBody,MDBListGroup, MDBListGroupItem, MDBCardHeader } from 'mdbreact';\r\n\r\nconst MainPage = () => {\r\n    return (\r\n<MDBContainer>\r\n      <MDBRow>\r\n        <MDBCol md={4} sm={12} className='mt-4 border rounded mx-auto'>\r\n          <div class='text-center'>\r\n                <MDBBtn className=\"rounded btn-sm\" onClick={() => alert(\"This feature in under development\")}>\r\n                        Check Health\r\n                </MDBBtn>\r\n          </div>\r\n        <MDBContainer>\r\n      <MDBListGroup >\r\n        <MDBListGroupItem>Page 1</MDBListGroupItem>\r\n        <MDBListGroupItem>Page 2</MDBListGroupItem>\r\n        <MDBListGroupItem>Page 3</MDBListGroupItem>\r\n        <MDBListGroupItem>Page 4</MDBListGroupItem>\r\n        <MDBListGroupItem>Page 5</MDBListGroupItem>\r\n      </MDBListGroup>\r\n    </MDBContainer>\r\n        </MDBCol>\r\n        <MDBCol md={8} sm={10} style={{height:'90vh', overflow:'auto'}} className='mt-4 bg-light rounded p-4 mx-auto '>\r\n              <Router>\r\n                  <Route path='/login' component={FormPage} />\r\n              </Router>\r\n        </MDBCol>\r\n      </MDBRow>\r\n     \r\n    </MDBContainer>\r\n\r\n);\r\n};\r\n\r\nexport default MainPage;","C:\\Users\\perso\\dev\\src\\components\\pills.js",[],"C:\\Users\\perso\\dev\\src\\components\\radar.js",[],"C:\\Users\\perso\\dev\\src\\components\\table.js",[],"C:\\Users\\perso\\dev\\src\\components\\modal.js",[],"C:\\Users\\perso\\dev\\src\\components\\blog.js",["107","108","109","110"],"C:\\Users\\perso\\dev\\src\\components\\post.js",[],"C:\\Users\\perso\\dev\\src\\components\\append1.js",[],"C:\\Users\\perso\\dev\\src\\components\\loginwithgoogle.js",["111"],"import React, { Component } from \"react\"\r\nimport firebase from \"firebase\"\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\"\r\n\r\n\r\n\r\nfirebase.initializeApp({\r\n  apiKey: \"AIzaSyB1lah2jvUDiBruxoRoI01PgDcZbNqrzPk\",\r\n  authDomain: \"myapp-4e082.firebaseapp.com\"\r\n})\r\n\r\nclass logingoogle extends Component {\r\n  state = { isSignedIn: false }\r\n  uiConfig = {\r\n    signInFlow: \"popup\",\r\n    signInOptions: [\r\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n     \r\n    ],\r\n    callbacks: {\r\n      signInSuccess: () => false\r\n    }\r\n  }\r\n\r\n\r\n\r\n  componentDidMount = () => {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      this.setState({ isSignedIn: !!user })\r\n      console.log(\"user\", user)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {this.state.isSignedIn ? (\r\n          <span>\r\n            <div>Signed In!</div>\r\n            <button onClick={() => firebase.auth().signOut()}>Sign out!</button>\r\n            <h1>Welcome {firebase.auth().currentUser.displayName}</h1>\r\n            <img\r\n              alt=\"profile picture\"\r\n              src={firebase.auth().currentUser.photoURL}\r\n            />\r\n          </span>\r\n        ) : (\r\n          <StyledFirebaseAuth\r\n            uiConfig={this.uiConfig}\r\n            firebaseAuth={firebase.auth()}\r\n          />\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default logingoogle\r\n","C:\\Users\\perso\\dev\\src\\registerServiceWorker.js",[],"C:\\Users\\perso\\dev\\src\\components\\Profiles\\Profiles.js",[],"C:\\Users\\perso\\dev\\src\\components\\Profiles\\Profile.js",[],"C:\\Users\\perso\\dev\\src\\components\\LoadingSkeletons.js",[],"C:\\Users\\perso\\dev\\src\\components\\search.js",[],{"ruleId":"112","severity":1,"message":"113","line":5,"column":8,"nodeType":"114","messageId":"115","endLine":5,"endColumn":23},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"112","severity":1,"message":"120","line":1,"column":48,"nodeType":"114","messageId":"115","endLine":1,"endColumn":55},{"ruleId":"112","severity":1,"message":"121","line":1,"column":57,"nodeType":"114","messageId":"115","endLine":1,"endColumn":68},{"ruleId":"112","severity":1,"message":"122","line":1,"column":110,"nodeType":"114","messageId":"115","endLine":1,"endColumn":123},{"ruleId":"112","severity":1,"message":"123","line":3,"column":39,"nodeType":"114","messageId":"115","endLine":3,"endColumn":48},{"ruleId":"112","severity":1,"message":"124","line":7,"column":8,"nodeType":"114","messageId":"115","endLine":7,"endColumn":16},{"ruleId":"112","severity":1,"message":"125","line":10,"column":8,"nodeType":"114","messageId":"115","endLine":10,"endColumn":17},{"ruleId":"112","severity":1,"message":"126","line":13,"column":8,"nodeType":"114","messageId":"115","endLine":13,"endColumn":13},{"ruleId":"112","severity":1,"message":"127","line":5,"column":8,"nodeType":"114","messageId":"115","endLine":5,"endColumn":16},{"ruleId":"116","replacedBy":"128"},{"ruleId":"118","replacedBy":"129"},{"ruleId":"112","severity":1,"message":"130","line":1,"column":8,"nodeType":"114","messageId":"115","endLine":1,"endColumn":13},{"ruleId":"112","severity":1,"message":"131","line":3,"column":35,"nodeType":"114","messageId":"115","endLine":3,"endColumn":41},{"ruleId":"112","severity":1,"message":"120","line":4,"column":48,"nodeType":"114","messageId":"115","endLine":4,"endColumn":55},{"ruleId":"112","severity":1,"message":"121","line":4,"column":57,"nodeType":"114","messageId":"115","endLine":4,"endColumn":68},{"ruleId":"112","severity":1,"message":"122","line":4,"column":101,"nodeType":"114","messageId":"115","endLine":4,"endColumn":114},{"ruleId":"112","severity":1,"message":"132","line":3,"column":10,"nodeType":"114","messageId":"115","endLine":3,"endColumn":22},{"ruleId":"112","severity":1,"message":"122","line":3,"column":24,"nodeType":"114","messageId":"115","endLine":3,"endColumn":37},{"ruleId":"112","severity":1,"message":"133","line":3,"column":39,"nodeType":"114","messageId":"115","endLine":3,"endColumn":46},{"ruleId":"112","severity":1,"message":"134","line":3,"column":48,"nodeType":"114","messageId":"115","endLine":3,"endColumn":56},{"ruleId":"135","severity":1,"message":"136","line":42,"column":13,"nodeType":"137","endLine":45,"endColumn":15},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["138"],"no-negated-in-lhs",["139"],"'MDBCard' is defined but never used.","'MDBCardBody' is defined but never used.","'MDBCardHeader' is defined but never used.","'Component' is defined but never used.","'MainPage' is defined but never used.","'ModalPage' is defined but never used.","'Form1' is defined but never used.","'FormPage' is defined but never used.",["138"],["139"],"'react' is defined but never used.","'Switch' is defined but never used.","'MDBContainer' is defined but never used.","'MDBIcon' is defined but never used.","'MDBMedia' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]